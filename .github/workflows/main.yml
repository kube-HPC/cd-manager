# This is a basic workflow to help you get started with Actions

name: CI-MAIN

# Controls when the action will run. 
on:
  # Allows you to run this workflow manually from the Actions tab
  repository_dispatch: 
    types: [trigger]
  workflow_dispatch:
    inputs:
      version:
        description: Version to install
        required: true
        default: latest
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: create kubeconfig
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > /tmp/config
          chmod go-r /tmp/config
          echo KUBECONFIG=/tmp/config >> $GITHUB_ENV
        env:
          KUBE_CONFIG_DATA: ${{ secrets.CICD_KUBECONFIG }}
      - name: verify kubectl
        run: kubectl cluster-info
      - name: deploy
        run: ./deploy.sh ${{ secrets.HKUBE_DOMAIN_RAW }}
        env:
          DOCKER_BUILD_PUSH_PASSWORD: ${{ secrets.DOCKER_BUILD_PUSH_PASSWORD }}
          DOCKER_BUILD_PUSH_USERNAME: ${{ secrets.DOCKER_BUILD_PUSH_USERNAME }}
          VERSION: ${{ github.event.client_payload.version || github.event.inputs.version }}
  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v2
      - name: create kubeconfig
        run: |
          echo "$KUBE_CONFIG_DATA" | base64 --decode > /tmp/config
          echo KUBECONFIG=/tmp/config >> $GITHUB_ENV
        env:
          KUBE_CONFIG_DATA: ${{ secrets.CICD_KUBECONFIG }}
      - name: verify kubectl
        run: kubectl cluster-info
      - name: test
        run: |
          echo Running tests
          export BASE_URL=https://${KUBERNETES_MASTER_IP}
          export WEBHOOK_URL=${WEBHOOK_MASTER_URL}

          echo "BASE_URL=$BASE_URL"

          echo "=== Public IP of this runner ==="
          curl -s https://api.ipify.org || true
          echo
          echo "================================"

          echo "=== DNS lookup ==="
          nslookup $(echo $BASE_URL | sed 's~https\?://~~')
          echo "================================"

          echo "=== Curl connectivity test ==="
          curl -vk $BASE_URL/auth/login || true
          echo "================================"

          npm test
        env:
          KUBERNETES_MASTER_IP: ${{ secrets.CICD_KUBERNETES_MASTER_IP }}
          KEYCLOAK_DEV_PASS: ${{ secrets.KEYCLOAK_DEV_PASS }}
          KEYCLOAK_DEV_USER: ${{ secrets.KEYCLOAK_DEV_USER }}
          KEYCLOAK_GUEST_PASS: ${{ secrets.KEYCLOAK_GUEST_PASS }}
          KEYCLOAK_GUEST_USER: ${{ secrets.KEYCLOAK_GUEST_USER }}
      

