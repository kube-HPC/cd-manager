global:
  production: true
  clusterName: cicd
  registry: ""
  storage:
    binary: true
    fs:
      pvc: 
         name: 'hkube-storage'
         capacity: '50Gi'
         nfs_server: '172.20.45.142'
         nfs_root: '/nfs/storageclass'
      dev_pvc:
         storage_class: 'nfs-client'
      base_directory: '/hkubedata'
  ingress:
    use_regex: true
  registry_username: ${IMAGE_PULL_USERNAME}
  registry_password: ${IMAGE_PULL_PASSWORD}

env:
  kibana_url: "https://cicd.hkube.org/system/kibana/"
  grafana_url: "https://cicd.hkube.org/grafana"
  default_storage: 'fs'

build_secret:
  docker_registry: ''
  docker_namespace: ''
  docker_username: ${DOCKER_BUILD_PUSH_USERNAME}
  docker_password: ${DOCKER_BUILD_PUSH_PASSWORD}

etcd:
  persistentVolume:
    enabled: true
    storageClass: etcd-sc

task_executor:
  env:
    pipeline_drivers_amount: 10
    use_resource_limits: true

monitor_server:
  env:
    elasticsearch_service_url: 'http://elasticsearch-ingest.logging.svc.cicd:9200'

etcd_cleaner:
  pattern: 0 5 * * *

storage_cleaner:
  pattern: 0 5 * * *

etcd_defrag:
  enable: false

cassandra:
  persistence:
    storageClass: nfs-client

mongodb:
  persistence:
    storageClass: nfs-client

postgresql:
  persistence:
    storageClass: nfs-client

gitea:
  persistence:
    storageClass: nfs-client

jaeger:
  enable: true
  query:
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx
    service:
      port: 80
      annotations: {}
      type: ClusterIP
      loadBalancerSourceRanges: []

minio:
  enable: true